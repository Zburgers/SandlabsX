services:
  # PostgreSQL Database for Guacamole
  postgres:
    image: postgres:15-alpine
    container_name: sandlabx-postgres
    environment:
      POSTGRES_DB: guacamole_db
      POSTGRES_USER: guacamole
      POSTGRES_PASSWORD: guacpass123
    volumes:
      - ./initdb-schema.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - sandlabx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U guacamole -d guacamole_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Guacamole Daemon (VNC/RDP/SSH proxy)
  guacd:
    image: guacamole/guacd:latest
    container_name: guacd
    restart: unless-stopped
    networks:
      - sandlabx-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4822"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Guacamole Web Application
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    environment:
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822
      POSTGRESQL_HOSTNAME: postgres
      POSTGRESQL_DATABASE: guacamole_db
      POSTGRESQL_USER: guacamole
      POSTGRESQL_PASSWORD: guacpass123
      GUACAMOLE_HOME: /guacamole-home
    depends_on:
      postgres:
        condition: service_healthy
      guacd:
        condition: service_healthy
    ports:
      - "8081:8080"
    restart: unless-stopped
    networks:
      - sandlabx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/guacamole/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sandlabx-backend
    environment:
      PORT: 3001
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: guacamole_db
      DB_USER: guacamole
      DB_PASSWORD: guacpass123
      VNC_HOST: sandlabx-backend
      BASE_IMAGE_PATH: /images/alpine-3.qcow2
      OVERLAYS_PATH: /overlays
      VNC_START_PORT: 5900
      QEMU_RAM: 2048
      QEMU_CPUS: 2
      STATE_FILE: /app/state/nodes-state.json
      AUTO_DOWNLOAD_IMAGES: "true"
    volumes:
      - ./images:/images:rw
      - ./vms:/vms:rw
      - ./overlays:/overlays:rw
      - backend_state:/app/state
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      guacamole:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sandlabx-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 15s
      timeout: 5s
      retries: 2

  # Frontend Web UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sandlabx-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NEXT_PUBLIC_GUACAMOLE_URL: http://localhost:8081/guacamole
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sandlabx-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 2

networks:
  sandlabx-network:
    driver: bridge
    name: sandlabx-network

volumes:
  postgres_data:
    name: sandlabx-postgres-data
  backend_state:
    name: sandlabx-backend-state

